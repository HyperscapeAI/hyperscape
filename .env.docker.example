# Hyperscape Docker Development Environment
# Copy this file to .env for Docker Compose to use
#
# REQUIRED VARIABLES (must be set - no defaults):
#   - JWT_SECRET: Strong random secret for JWT tokens (min 32 chars)
#   - POSTGRES_USER: PostgreSQL username
#   - POSTGRES_PASSWORD: PostgreSQL password
#   - POSTGRES_DB: PostgreSQL database name
#
# Generate JWT secret with: openssl rand -base64 32
# Docker Compose will fail fast if these are not set!

# ====================================
# Core Application Settings
# ====================================
NODE_ENV=development
WORLD=world
PORT=5555
SAVE_INTERVAL=60

# ====================================
# Authentication & Security
# ====================================
# REQUIRED: Generate a strong random secret for JWT tokens
# Example: openssl rand -base64 32
# NEVER use the default in production!
JWT_SECRET=REPLACE_WITH_STRONG_RANDOM_SECRET_MINIMUM_32_CHARS
ADMIN_CODE=

# ====================================
# Public URLs (Docker Networking)
# ====================================
# These use 'localhost' for browser access but containers use service names internally
PUBLIC_WS_URL=ws://localhost:5555/ws
PUBLIC_API_URL=http://localhost:5555/api
PUBLIC_CDN_URL=http://localhost:8080
PUBLIC_PLAYER_COLLISION=false
PUBLIC_MAX_UPLOAD_SIZE=12

# ====================================
# Database - PostgreSQL (Docker Service)
# ====================================
DATABASE_URL=postgresql://hyperscape:hyperscape_dev@postgres:5432/hyperscape
POSTGRES_USER=hyperscape
POSTGRES_PASSWORD=hyperscape_dev
POSTGRES_DB=hyperscape
POSTGRES_PORT=5432
POSTGRES_HOST=postgres

# ====================================
# LiveKit (Optional - Voice Chat)
# ====================================
# Leave empty to disable voice features
LIVEKIT_URL=
LIVEKIT_API_KEY=
LIVEKIT_API_SECRET=

# ====================================
# Privy Authentication (Optional - Web3)
# ====================================
# Sign up at https://dashboard.privy.io/ to get these
PRIVY_APP_ID=
PRIVY_APP_SECRET=
PUBLIC_PRIVY_APP_ID=

# ====================================
# Farcaster (Optional - Miniapp)
# ====================================
PUBLIC_ENABLE_FARCASTER=false
PUBLIC_FC_APP_ID=
FC_APP_SECRET=
FC_SIGNER_UUID=

# ====================================
# AI Services - Content Generation
# ====================================
# OpenAI API Key (for GPT-4, character intelligence, content generation)
OPENAI_API_KEY=

# MeshyAI API Key (for 3D model generation)
# Sign up at https://www.meshy.ai/ to get your API key
MESHY_API_KEY=msy_YOUR_MESHY_API_KEY_HERE

# Vercel AI Gateway API Key (for unified AI access with rate limiting & caching)
# Get your key from https://vercel.com/docs/ai-gateway
AI_GATEWAY_API_KEY=vck_YOUR_VERCEL_AI_GATEWAY_KEY_HERE

# AI Gateway Configuration
AI_GATEWAY_BASE_URL=https://ai-gateway.vercel.sh/v1
AI_GATEWAY_SMALL_MODEL=gpt-4o-mini
AI_GATEWAY_LARGE_MODEL=gpt-4o
AI_GATEWAY_EMBEDDING_MODEL=text-embedding-3-small
AI_GATEWAY_IMAGE_MODEL=dall-e-3
AI_GATEWAY_IMAGE_DESCRIPTION_MODEL=gpt-4o-mini
AI_GATEWAY_IMAGE_DESCRIPTION_MAX_TOKENS=8192
AI_GATEWAY_TRANSCRIPTION_MODEL=whisper-1
AI_GATEWAY_TTS_MODEL=tts-1
AI_GATEWAY_TTS_VOICE=nova
AI_GATEWAY_EXPERIMENTAL_TELEMETRY=false

# Asset Forge Configuration (client-side AI tools)
VITE_OPENAI_API_KEY=
VITE_MESHY_API_KEY=msy_YOUR_MESHY_API_KEY_HERE
VITE_IMAGE_SERVER_URL=http://localhost:3001
VITE_GENERATION_API_URL=http://localhost:3000/api

# ====================================
# ElizaOS Plugin Configuration
# ====================================
# Hyperscape world connection for AI agents
HYPERSCAPE_TEST_WORLD=https://hyperscape.io/your-test-world-id
HYPERSCAPE_AUTH_TOKEN=
HYPERSCAPE_ASSETS_URL=https://assets.hyperscape.io

# Database adapter for ElizaOS: 'sqlite' (local) or 'postgres' (production)
DATABASE_ADAPTER=sqlite
SQLITE_FILE=./test-data/timber.db

# Logging & Debugging
LOG_LEVEL=info
DEBUG_RPG=0

# ====================================
# Optional: Advanced Configuration
# ====================================
# Custom plugin/systems path
PLUGIN_PATH=
SYSTEMS_PATH=

# Client-side configuration
PUBLIC_STARTER_ITEMS=
TERRAIN_SEED=0

# Server configuration
CAP_SERVER_URL=

# Ollama (local LLM alternative)
# OLLAMA_API_ENDPOINT=http://localhost:11434

# ====================================
# Docker Compose Settings
# ====================================
COMPOSE_PROJECT_NAME=hyperscape
COMPOSE_FILE=docker-compose.yml

# Container resource limits (optional)
# POSTGRES_MAX_CONNECTIONS=200
# POSTGRES_SHARED_BUFFERS=256MB
